{"ast":null,"code":"var _jsxFileName = \"/Users/Shufan/Desktop/aipd/frontend/aipd/src/Components/GameTableComponent.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameTableComponent = (userHistory, opponentHistory) => {\n  return /*#__PURE__*/_jsxDEV(Table, {\n    celled: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Your Moves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Opponent Moves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Your Cumulative Reward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          children: \"Opponent Cumulative Reward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      children: generateRows(userHistory, opponentHistory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = GameTableComponent;\n\nconst generateRows = (userHistory, opponentHistory) => {\n  if (userHistory.length <= 0) {\n    return null;\n  }\n\n  const cumulativeRewards = computeCumulativeRewards(userHistory, opponentHistory);\n  const rows = userHistory.map((x, i) => {\n    return /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: opponentHistory[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: cumulativeRewards[i].userCumulativeRewards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: cumulativeRewards[i].opponentCumulativeRewards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  });\n  return rows;\n};\n\nconst REWARD = [[2, 2], [0, 3], [3, 0], [1, 1]];\n\nconst computeReward = (userChoice, opponentChoice) => {\n  var userReward = 0;\n  var opponentReward = 0;\n\n  if (userChoice === 0 && opponentChoice === 0) {\n    userReward = REWARD[0][0];\n    opponentReward = REWARD[0][1];\n  } else if (userChoice === 0 && opponentChoice === 1) {\n    userReward = REWARD[1][0];\n    opponentReward = REWARD[1][1];\n  } else if (userChoice === 1 && opponentChoice === 0) {\n    userReward = REWARD[2][0];\n    opponentReward = REWARD[2][1];\n  } else {\n    userReward = REWARD[3][0];\n    opponentReward = REWARD[3][1];\n  }\n\n  return {\n    userReward: userReward,\n    opponentReward: opponentReward\n  };\n};\n\nconst computeCumulativeRewards = (userHistory, opponentHistory) => {\n  var userCumulativeRewards = [];\n  var opponentCumulativeRewards = [];\n  const roundRewards = userHistory.map((x, i) => {\n    return computeReward(x, opponentHistory[i]);\n  });\n  const roundRewardsCopy = roundRewards;\n  roundRewards.reduce((a, b, i) => {\n    userCumulativeRewards[i] = a + b.userReward;\n    return userCumulativeRewards[i];\n  }, 0);\n  roundRewardsCopy.reduce((a, b, i) => {\n    opponentCumulativeRewards[i] = a + b.opponentReward;\n    return opponentCumulativeRewards[i];\n  }, 0);\n  return {\n    userCumulativeRewards: userCumulativeRewards,\n    opponentCumulativeRewards: opponentCumulativeRewards\n  };\n};\n\nexport default GameTableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameTableComponent\");","map":{"version":3,"sources":["/Users/Shufan/Desktop/aipd/frontend/aipd/src/Components/GameTableComponent.js"],"names":["React","Table","GameTableComponent","userHistory","opponentHistory","generateRows","length","cumulativeRewards","computeCumulativeRewards","rows","map","x","i","userCumulativeRewards","opponentCumulativeRewards","REWARD","computeReward","userChoice","opponentChoice","userReward","opponentReward","roundRewards","roundRewardsCopy","reduce","a","b"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\n\nconst GameTableComponent = (userHistory, opponentHistory) => {\n    return <Table celled>\n        <Table.Header>\n            <Table.Row>\n                <Table.HeaderCell>Your Moves</Table.HeaderCell>\n                <Table.HeaderCell>Opponent Moves</Table.HeaderCell>\n                <Table.HeaderCell>Your Cumulative Reward</Table.HeaderCell>\n                <Table.HeaderCell>Opponent Cumulative Reward</Table.HeaderCell>\n            </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {generateRows(userHistory, opponentHistory)}\n        </Table.Body>\n    </Table>\n}\n\nconst generateRows = (userHistory, opponentHistory) => {\n    if (userHistory.length <= 0) {\n        return null;\n    }\n    const cumulativeRewards = computeCumulativeRewards(userHistory, opponentHistory)\n    const rows = userHistory.map((x, i) => {\n        return <Table.Row>\n            <Table.Cell>{x}</Table.Cell>\n            <Table.Cell>{opponentHistory[i]}</Table.Cell>\n            <Table.Cell>{cumulativeRewards[i].userCumulativeRewards}</Table.Cell>\n            <Table.Cell>{cumulativeRewards[i].opponentCumulativeRewards}</Table.Cell>\n        </Table.Row>\n    })\n    return rows\n}\n\nconst REWARD = [[2, 2], \n                [0, 3],\n                [3, 0],\n                [1, 1]]\n\nconst computeReward = (userChoice, opponentChoice) => {\n\n    var userReward = 0;\n    var opponentReward = 0;\n\n    if (userChoice === 0 && opponentChoice === 0) {\n        userReward = REWARD[0][0]\n        opponentReward = REWARD[0][1]\n    } else if (userChoice === 0 && opponentChoice === 1) {\n        userReward = REWARD[1][0]\n        opponentReward = REWARD[1][1]\n    } else if (userChoice === 1 && opponentChoice === 0) {\n        userReward = REWARD[2][0]\n        opponentReward = REWARD[2][1]\n    } else {\n        userReward = REWARD[3][0]\n        opponentReward = REWARD[3][1]\n    }\n\n    return {\n        userReward: userReward,\n        opponentReward: opponentReward\n    }\n}\n\nconst computeCumulativeRewards = (userHistory, opponentHistory) => {\n    var userCumulativeRewards = []\n    var opponentCumulativeRewards = []\n\n    const roundRewards = userHistory.map((x, i) => {\n        return computeReward(x, opponentHistory[i])\n    })\n\n    const roundRewardsCopy = roundRewards\n\n    roundRewards.reduce((a, b, i) => {\n        userCumulativeRewards[i] = a + b.userReward\n        return userCumulativeRewards[i]\n    }, 0)\n\n    roundRewardsCopy.reduce((a, b, i) => {\n        opponentCumulativeRewards[i] = a + b.opponentReward\n        return opponentCumulativeRewards[i]\n    }, 0) \n\n    return {\n        userCumulativeRewards: userCumulativeRewards,\n        opponentCumulativeRewards: opponentCumulativeRewards\n    }\n\n}\n\nexport default GameTableComponent;"]},"metadata":{},"sourceType":"module"}