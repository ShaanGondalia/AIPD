{"ast":null,"code":"var _jsxFileName = \"/Users/Shufan/Desktop/aipd/frontend/src/Pages/ResultsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Header, Grid, Image } from 'semantic-ui-react';\nimport AgentCardComponent from '../Components/AgentCardComponent';\nimport LSTMAcc from '../Static/LSTM Accuracy.png';\nimport CooperateConfidence from '../Static/CooperateConfidence.png';\nimport DefectConfidence from '../Static/DefectConfidence.png';\nimport CopyConfidence from '../Static/CopyConfidence.png';\nimport GrudgeConfidence from '../Static/GrudgeConfidence.png';\nimport Cooperate from '../Static/Cooperate.gif';\nimport Defect from '../Static/Defect.gif';\nimport Copy from '../Static/Copy.gif';\nimport Grudge from '../Static/Grudge.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultPage = () => {\n  _s();\n\n  const [visualQState, setVisualQState] = React.useState('coop');\n\n  const handleQClick = (event, _ref) => {\n    let {\n      name\n    } = _ref;\n    setVisualQState(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Results of LSTM Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: LSTMAcc,\n      className: \"ui centered medium image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '2em'\n      },\n      children: \"The above graphic displays the accuracy of our LSTM model as the number of rounds it plays increases. When the model starts out playing just 1 round, it can only identify the opponent with around 20% accuracy meaning it is randomly guessing the identity of the opponent. However, as the number of rounds increases, the model becomes more and more accurate at identifying its opponent, reaching a plateau at 80% accuracy with 10 rounds.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: CooperateConfidence,\n            className: \"ui centered medium image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: DefectConfidence,\n            className: \"ui centered medium image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: CopyConfidence,\n            className: \"ui centered medium image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: GrudgeConfidence,\n            className: \"ui centered medium image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '2em'\n      },\n      children: \"The above 4 graphics display the confidence of our LSTM model as the number of rounds it plays increases. The LSTM model is able to quickly and confidently identify the Cooperate Agent and the Grudge Agent. However, it consistently mistakes the Defect Agent with the Grudge Agent until over 20 rounds are played. This shouldn't greatly affect performance  as a Defect Agent and a Grudge Agent that has been cheated on have the same actions, so the optimal moves should be the same via Q-Table. Lastly, with the Copy Agent, the model is able to identify it confidently so long as the number of rounds played remain below 30, after which it confuses it with the Cooperate Agent. This can lead to undesirable behavior as over the long run, it is best to cheat against a Cooperate Agent and cooperate against a Copy Agent, leading to unoptimal behavior from the AI.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Results of Q-Table Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 3,\n          children: /*#__PURE__*/_jsxDEV(AgentCardComponent, {\n            image: Cooperate,\n            header: \"Cooperate\",\n            description: \"Q-Table weights trained to play optimally against a Cooperate Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 3,\n          children: /*#__PURE__*/_jsxDEV(AgentCardComponent, {\n            image: Defect,\n            header: \"Defect\",\n            description: \"Q-Table weights trained to play optimally against a Defect Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 3,\n          children: /*#__PURE__*/_jsxDEV(AgentCardComponent, {\n            image: Copy,\n            header: \"Copy\",\n            description: \"Q-Table weights trained to play optimally against a Copy Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 3,\n          children: /*#__PURE__*/_jsxDEV(AgentCardComponent, {\n            image: Grudge,\n            header: \"Grudge\",\n            description: \"Q-Table weights trained to play optimally against a Grudge Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ResultPage, \"4PRRAkMRHs0SM7CM0xjZq+ws0nI=\");\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["/Users/Shufan/Desktop/aipd/frontend/src/Pages/ResultsPage.js"],"names":["React","Container","Header","Grid","Image","AgentCardComponent","LSTMAcc","CooperateConfidence","DefectConfidence","CopyConfidence","GrudgeConfidence","Cooperate","Defect","Copy","Grudge","ResultPage","visualQState","setVisualQState","useState","handleQClick","event","name","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Header, Grid, Image } from 'semantic-ui-react';\nimport AgentCardComponent from '../Components/AgentCardComponent';\nimport LSTMAcc from '../Static/LSTM Accuracy.png'\nimport CooperateConfidence from '../Static/CooperateConfidence.png'\nimport DefectConfidence from '../Static/DefectConfidence.png'\nimport CopyConfidence from '../Static/CopyConfidence.png'\nimport GrudgeConfidence from '../Static/GrudgeConfidence.png'\nimport Cooperate from '../Static/Cooperate.gif'\nimport Defect from '../Static/Defect.gif'\nimport Copy from '../Static/Copy.gif'\nimport Grudge from '../Static/Grudge.gif'\n\n\nconst ResultPage = () => {\n    const [visualQState, setVisualQState] = React.useState('coop')\n\n    const handleQClick = (event, {name}) => {\n        setVisualQState(name)\n    }\n\n\n    return <Container>\n        <Header as='h2'>Results of LSTM Training</Header>\n        <Image src = {LSTMAcc} className= \"ui centered medium image\"/>\n        <div style={{margin: '2em'}}>\n            The above graphic displays the accuracy of our LSTM model as the number of rounds it plays increases. \n            When the model starts out playing just 1 round, it can only identify the opponent with around 20% \n            accuracy meaning it is randomly guessing the identity of the opponent. However, as the number of rounds\n            increases, the model becomes more and more accurate at identifying its opponent, reaching a plateau at \n            80% accuracy with 10 rounds.\n        </div>\n        <Grid>\n            <Grid.Row centered>\n                <Grid.Column width={4}>\n                    <Image src = {CooperateConfidence} className='ui centered medium image'/>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Image src = {DefectConfidence} className='ui centered medium image'/>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Image src = {CopyConfidence} className='ui centered medium image'/>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Image src = {GrudgeConfidence} className='ui centered medium image'/>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n        <div style={{margin: '2em'}}>\n            The above 4 graphics display the confidence of our LSTM model as the number of rounds it plays increases.\n            The LSTM model is able to quickly and confidently identify the Cooperate Agent and the Grudge Agent. However, \n            it consistently mistakes the Defect Agent with the Grudge Agent until over 20 rounds are played. This \n            shouldn't greatly affect performance  as a Defect Agent and a Grudge Agent that has been cheated on have the same actions,\n            so the optimal moves should be the same via Q-Table. Lastly, with the Copy Agent, the model is able to identify it \n            confidently so long as the number of rounds played remain below 30, after which it confuses it with the Cooperate Agent. \n            This can lead to undesirable behavior as over the long run, it is best to cheat against a Cooperate Agent and cooperate against\n            a Copy Agent, leading to unoptimal behavior from the AI.\n\n        </div>\n        <Header as='h2'>Results of Q-Table Training</Header>  \n        <Grid>\n            <Grid.Row centered>\n                <Grid.Column width={3}>\n                    <AgentCardComponent\n                        image= {Cooperate}\n                        header=\"Cooperate\"\n                        description=\"Q-Table weights trained to play optimally against a Cooperate Agent\"\n                    />\n                </Grid.Column>\n                <Grid.Column width={3}>\n                    <AgentCardComponent\n                        image= {Defect}\n                        header=\"Defect\"\n                        description=\"Q-Table weights trained to play optimally against a Defect Agent\"\n                    />\n                </Grid.Column>\n                <Grid.Column width={3}>\n                    <AgentCardComponent\n                        image= {Copy}\n                        header=\"Copy\"\n                        description=\"Q-Table weights trained to play optimally against a Copy Agent\"\n                    />\n                </Grid.Column>\n                <Grid.Column width={3}>\n                    <AgentCardComponent\n                        image= {Grudge}\n                        header=\"Grudge\"\n                        description=\"Q-Table weights trained to play optimally against a Grudge Agent\"\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n        <div></div>\n    </Container>\n}\n\nexport default ResultPage;"]},"metadata":{},"sourceType":"module"}